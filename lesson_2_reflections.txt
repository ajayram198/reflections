What happens when you initialize a repository? Why do you need to do it?
We initalize a repository so that Git can start tracking these files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is like an intermediate between the untracked file and the committed file. It helps us to remove files if they have been accidentally chosen for a commit, so you can add/remove files from staging area before making the commit.

How can you use the staging area to make sure you have one commit per logical change?
Ensure that in the staging area, you add files after doing a logical change and then immediately commit it before going to the next logical change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are useful when you are adding a new experimental feature to the software but want to keep an older version also. Suppose there are 2 kinds of changes to be made which are independent (like v2.0 and v3.0), then we can use branches and switch between them. Then we'll be able to view 2 independent versions of the software.

How do the diagrams help you visualize the branch structure?
Using git log --graph we get diagrams of the branch structure. Diagrams are a pictorial manner of representing the branches and relationships between commits. They help in visualizing the entire commit history.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging 2 branches takes in all the changes done in both branches (master and the branch) and makes master point to the merged commit. The commit log, if checked will have two parents. Representing in the digram form is easier to understand the commit structure.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging saves time and effort. but it may merge unindented files and cause unwanted changes. for example, if one branch deleted a
    function, and another branch added a call to that function, Git would merge
    those together with no conflict and the resulting code would be broken.
, clarify this with Kranthi
Manual merging always gives the authority to the user to merge so it is safer.
